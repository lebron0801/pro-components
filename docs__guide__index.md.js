(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[30],{"367t":function(e,t,n){"use strict";n.r(t);var a=n("q1tI"),o=n.n(a),i=n("dEAq"),l=n("H1Ra"),c=o.a.memo((e=>{e.demos;return o.a.createElement(o.a.Fragment,null,o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"whats-dumi"},o.a.createElement(i["AnchorLink"],{to:"#whats-dumi","aria-hidden":"true",tabIndex:-1},o.a.createElement("span",{className:"icon icon-link"})),"What's dumi?"),o.a.createElement("p",null,"dumi, pronounced like [du\u02d0m\u026a], is a documentation tool for developing libraries. It can provide one-stop component development experience for developer with ",o.a.createElement(i["Link"],{to:"https://github.com/umijs/father"},"father"),", in which ",o.a.createElement("strong",null,"father for building and dumi for component development & writting docs"),"."),o.a.createElement("h2",{id:"features"},o.a.createElement(i["AnchorLink"],{to:"#features","aria-hidden":"true",tabIndex:-1},o.a.createElement("span",{className:"icon icon-link"})),"Features"),o.a.createElement("ul",null,o.a.createElement("li",null,"\ud83d\udce6 Out of the box, focus on component development and documentation"),o.a.createElement("li",null,"\ud83d\udccb Rich Markdown extensions, more than just rendering component demo"),o.a.createElement("li",null,"\ud83c\udff7 Automatically generate component API based on TypeScript type definition"),o.a.createElement("li",null,"\ud83c\udfa8 Easily customize the theme, and create your own Markdown components"),o.a.createElement("li",null,"\ud83d\udcf1 Support mobile component library development, built-in mobile HD rendering solution"),o.a.createElement("li",null,"\ud83d\udce1 One-line command digitizes component assets and connects them with downstream productivity tools")),o.a.createElement("h2",{id:"getting-started"},o.a.createElement(i["AnchorLink"],{to:"#getting-started","aria-hidden":"true",tabIndex:-1},o.a.createElement("span",{className:"icon icon-link"})),"Getting Started"),o.a.createElement("h3",{id:"environment-setup"},o.a.createElement(i["AnchorLink"],{to:"#environment-setup","aria-hidden":"true",tabIndex:-1},o.a.createElement("span",{className:"icon icon-link"})),"Environment setup"),o.a.createElement("p",null,"First, you should have ",o.a.createElement(i["Link"],{to:"https://nodejs.org/en/"},"node"),", and ensure that the node version is 10.13 or above."),o.a.createElement(l["a"],{code:"$ node -v\nv10.13.0",lang:"bash"}),o.a.createElement("h3",{id:"initial-scaffold"},o.a.createElement(i["AnchorLink"],{to:"#initial-scaffold","aria-hidden":"true",tabIndex:-1},o.a.createElement("span",{className:"icon icon-link"})),"Initial scaffold"),o.a.createElement("p",null,"For convenience of usage, dumi provides two different scaffolds, differences between the two scaffolds can view ",o.a.createElement(i["AnchorLink"],{to:"/config#mode"},"Guide - Mode"),". First, we need to find a place to make an empty directory, and then use scaffold:"),o.a.createElement(l["a"],{code:"$ mkdir myapp && cd myapp",lang:"bash"}),o.a.createElement("h4",{id:"scaffold-for-components"},o.a.createElement(i["AnchorLink"],{to:"#scaffold-for-components","aria-hidden":"true",tabIndex:-1},o.a.createElement("span",{className:"icon icon-link"})),"Scaffold for components"),o.a.createElement("p",null,"Scaffold for components includes not only dumi and basic docs, but also a simple component, umi-test, father-build. which can implement processes of developing components, writting docs, coding test cases, build components."),o.a.createElement(l["a"],{code:"$ npx @umijs/create-dumi-lib        # initial a scaffold for components in doc mode\n# or\n$ yarn create @umijs/dumi-lib\n\n$ npx @umijs/create-dumi-lib --site # initial a scaffold for components in site mode\n# or\n$ yarn create @umijs/dumi-lib --site",lang:"bash"}),o.a.createElement("h4",{id:"scaffold-for-static-site"},o.a.createElement(i["AnchorLink"],{to:"#scaffold-for-static-site","aria-hidden":"true",tabIndex:-1},o.a.createElement("span",{className:"icon icon-link"})),"Scaffold for static site"),o.a.createElement("p",null,"Scaffold for static site is a scaffold in multi-language site mode, which only includes docs."),o.a.createElement(l["a"],{code:"$ npx @umijs/create-dumi-app\n# or\n$ yarn create @umijs/dumi-app",lang:"bash"}),o.a.createElement("h3",{id:"repository-template-initialization"},o.a.createElement(i["AnchorLink"],{to:"#repository-template-initialization","aria-hidden":"true",tabIndex:-1},o.a.createElement("span",{className:"icon icon-link"})),"Repository template initialization"),o.a.createElement("p",null,"We can also use the ",o.a.createElement("code",null,"dumi-template")," repository for initialization, visit ",o.a.createElement(i["Link"],{to:"https://github.com/umijs/dumi-template"},"https://github.com/umijs/dumi-template")," to learn more."),o.a.createElement("p",null,o.a.createElement("img",{src:"https://gw.alipayobjects.com/zos/bmw-prod/91791904-cdde-4408-959d-72fd0c9049b1/kj80x6lv_w1918_h352.png",alt:""})),o.a.createElement("h3",{id:"start-development"},o.a.createElement(i["AnchorLink"],{to:"#start-development","aria-hidden":"true",tabIndex:-1},o.a.createElement("span",{className:"icon icon-link"})),"Start development"),o.a.createElement("p",null,"Execute ",o.a.createElement("code",null,"npm run dev")," or ",o.a.createElement("code",null,"npx dumi dev")," to start debugging components or writing documents:"),o.a.createElement("p",null,o.a.createElement("img",{src:"https://gw.alipayobjects.com/zos/bmw-prod/a74b9643-b1db-48b0-83b1-67d15e13b6fc/k7a3sl0s_w1988_h1310.png",alt:""})),o.a.createElement("h3",{id:"build-and-deploy"},o.a.createElement(i["AnchorLink"],{to:"#build-and-deploy","aria-hidden":"true",tabIndex:-1},o.a.createElement("span",{className:"icon icon-link"})),"Build and deploy"),o.a.createElement("p",null,"Execute ",o.a.createElement("code",null,"npm run docs:build")," (scaffold for components) / ",o.a.createElement("code",null,"npm run build"),"\uff08scaffold for static site), or ",o.a.createElement("code",null,"npx dumi build")," to build our documentation site. The build product will be output to the ",o.a.createElement("code",null,"dist")," directory by default. We can deploy the ",o.a.createElement("code",null,"dist")," directory to now.sh, GitHub Pages, etc. On a static site hosting platform or a certain server.")))}));t["default"]=e=>{var t=o.a.useContext(i["context"]),n=t.demos;return o.a.useEffect((()=>{var t;null!==e&&void 0!==e&&null!==(t=e.location)&&void 0!==t&&t.hash&&i["AnchorLink"].scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),o.a.createElement(c,{demos:n})}}}]);